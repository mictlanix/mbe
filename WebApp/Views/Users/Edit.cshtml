@using Business.Essentials
@using Business.Essentials.Model;
@using Business.Essentials.WebApp.Helpers;
@model Business.Essentials.Model.User

@{
    ViewBag.Title = Resources.Edit;
}

<h2>@Resources.Edit</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>@Resources.User</legend>
        
        @Html.HiddenFor(model => model.UserName)

        <div class="editor-label">
            @Html.LabelFor(model => model.UserName)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.UserName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Employee)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EmployeeId)
            @Html.ValidationMessageFor(model => model.EmployeeId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="editor-label">
            @Html.EditorFor(model => model.IsAdministrator)
            @Html.LabelFor(model => model.IsAdministrator)
        </div>

        <table>
            <tr>
                <th>@Resources.Module</th>
                <th>
                    @Html.CheckBox("Create")
                    @Resources.Create
                </th>
                <th>
                    @Html.CheckBox("Read")
                    @Resources.Read
                </th>
                <th>
                    @Html.CheckBox("Update")
                    @Resources.Update
                </th>
                <th>
                    @Html.CheckBox("Delete")
                    @Resources.Delete
                </th>
            </tr>
            @foreach(var item in Enum.GetValues(typeof(SystemObjects)))
            {
            <tr class="center">
                <td class="left">
                    @(((SystemObjects)item).GetDisplayName())
                </td>
                <td>
                    @Html.CheckBox(Enum.GetName(typeof(SystemObjects), item) + "Create",
                                   Model.Privileges.Count(x => x.Object == (SystemObjects)item && (x.Privileges & AccessRight.Create) != 0) > 0)
                </td>
                <td>
                    @Html.CheckBox(Enum.GetName(typeof(SystemObjects), item) + "Read",
                                    Model.Privileges.Count(x => x.Object == (SystemObjects)item && (x.Privileges & AccessRight.Read) != 0) > 0)
                </td>
                <td>
                    @Html.CheckBox(Enum.GetName(typeof(SystemObjects), item) + "Update",
                                    Model.Privileges.Count(x => x.Object == (SystemObjects)item && (x.Privileges & AccessRight.Update) != 0) > 0)
                </td>
                <td>
                    @Html.CheckBox(Enum.GetName(typeof(SystemObjects), item) + "Delete",
                                    Model.Privileges.Count(x => x.Object == (SystemObjects)item && (x.Privileges & AccessRight.Delete) != 0) > 0)
                </td>
            </tr>
            }
        </table>
        <p><button type="submit" class="icon save">@Resources.Save</button></p>
    </fieldset>
}

<div>
        @Html.ActionLink(Resources.BackToList, "Index", new { }, new { @class = "button icon back" })
</div>
<script type="text/javascript">
    $(function () {
        $("#EmployeeId").tokenInput("add", { id: "@Model.Employee.Id", name: "@Model.Employee.Name"});
        $("table tr:first th input:checkbox").click(function () {
            var checkedStatus = this.checked;
            $("table tr td input:checkbox[name$='" + this.name + "']").each(function () {
                this.checked = checkedStatus;
            });
        });
    });
</script>