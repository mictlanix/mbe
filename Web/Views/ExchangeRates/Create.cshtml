@using Mictlanix.BE
@using Mictlanix.BE.Model
@using Mictlanix.BE.Web.Helpers
@model ExchangeRate

@{
    ViewBag.Title = Resources.CreateNew;
}

<h2>@Resources.Create</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>@Resources.ExchangeRate</legend>

        <div class="editor-label">
            @Html.LabelFor(x => x.Date)
        </div>
        <div class="editor-field">
            @Html.EditorFor(x => x.Date)
            @Html.ValidationMessageFor(x => x.Date)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(x => x.Base)
        </div>
        <div class="editor-field">
            <select id="target-list" name="Base">
            @foreach (var item in Enum.GetValues(typeof(CurrencyCode))) {
            	if(Configuration.DefaultCurrency == (CurrencyCode)item) {
                <option value="@((int)item)" selected>@item.ToString()</option>
                } else {
                <option value="@((int)item)">@item.ToString()</option>
                }
            }
            </select>
            @Html.ValidationMessageFor(x => x.Base)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(x => x.Rate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(x => x.Rate)
            @Html.ValidationMessageFor(x => x.Rate)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(x => x.Target)
        </div>
        <div class="editor-field">
        	@Html.HiddenFor(x => x.Target)
        	@Html.DisplayFor(x => x.Target)
        </div>
        
        <p><button type="submit" class="icon save">@Resources.Create</button></p>
    </fieldset>
}
<div id="back-to-list">
    @Html.ActionLink(Resources.BackToList, "Index", new { }, new { @class = "button icon back" })
</div>
