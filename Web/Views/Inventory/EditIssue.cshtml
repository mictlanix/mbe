@using Mictlanix.BE
@using Mictlanix.BE.Model
@using Mictlanix.BE.Web.Models
@model InventoryIssue

@{
    ViewBag.Title = Resources.Edit;
}

<script src="@Url.Content("~/Scripts/jquery.jeditable.mini.js")" type="text/javascript"></script>

<h2>@Resources.DisplayName_EditInventoryIssue</h2> 

<div id="master-container">
@Html.Partial("_IssueInfo")
</div>

<div id="details-container">
    <div>
        <label>@Resources.Product</label>
        <input type="text" id="product-search" name="product-search" />
    </div>
    <div id="items-container">
        <ul id="items" class="list-items">
        @foreach (var item in Model.Details)
        {
            @Html.Partial("_IssueItem", item) 
        }
        </ul>
    </div>
</div>
<div class="right floating">
    @using (Html.BeginForm("ConfirmIssue", "Inventory", new { id = Model.Id }))
    {
        <button type="submit" class="icon lock">@Resources.Complete</button>
    }
</div>
<div id="back-to-list">
    @Html.ActionLink(Resources.BackToList, "Issues", new { }, new { @class = "button icon back" })
</div>
<div id="dialog-confirm" title="@Resources.Delete">
	<p>
        <span class="ui-icon ui-icon-circle-close" style="float:left; margin:3px 7px 20px 0;"></span>
        @Resources.Message_DeleteConfirmation
    </p>
</div>
<script type="text/javascript">
    function editQuantity(id, value) {
        var result = "Error";

        $.ajaxSetup({ async: false });
        $.post("/Inventory/EditIssueDetailQty", { "id": id, "quantity": value }, function (data) {
            var element = $("#item" + id + " div.quantity");
            element.html(data.quantity);
            element.siblings(".total").html(data.total);
            element.switchClass("editable", "editable-ok").switchClass("editable-ok", "editable", 3000);
            result = data.quantity;
        }, "json");
        $.ajaxSetup({ async: true });

        return result;
    }

    function removeItem(id) {
        $("#dialog-confirm").dialog({
            resizable: true,
            height: 178,
            modal: true,
            buttons: {
                @Resources.Delete: function () {
                    $.post("/Inventory/RemoveIssueDetail", { "id": id }, function (data) {
                        if(data.result) {
                            $("#item" + id).remove();
                        }
                    }, "json");
                    $(this).dialog("close");
                },
                @Resources.Close: function () {
                    $(this).dialog("close");
                }
            }
        });
    }

    $(function () {
        $("#product-search").tokenInput("@Url.Action("GetSuggestions", "Products")", {
            hintText: "@Resources.HIntText",
            noResultsText: "@Resources.NoResultsText",
            searchingText: "@Resources.SearchingText",          
            resultsFormatter: function(item){return ProductFormatter(item);},
            queryParam: "pattern",minChars: 3,tokenLimit: 1,
            onAdd: function (item) {
                $.post("/Inventory/AddIssueDetail", { "movement": InventoryMovement.Id, "product": "" + item.id }, function (detail) {
                    $.get("/Inventory/GetIssueItem/" + detail.id, function (data) {
                        $("#items").append(data);
                        $("#item" + detail.id + " div.quantity").editable(function (value, settings) {
                            return editQuantity(detail.id, value);
                        }, { cssclass : "number" });

                        $("#product-search").tokenInput("clear");
                    });

                }, "json");
            }
        });

    @foreach (var item in Model.Details)
    {
        @:$("#item@(item.Id) div.quantity").editable(function(value,settings){return editQuantity(@item.Id, value);});
    }
    });
</script>
<style type="text/css">
ul.token-input-list {
  width:100%;
}
div.token-input-dropdown {
  width:650px;
}
</style>