@using Mictlanix.BE
@using Mictlanix.BE.Model
@using Mictlanix.BE.Web.Helpers
@model SalesOrder

<fieldset>
    <legend>@Resources.DisplayName_SalesInformation</legend>
    @using (Ajax.BeginForm(new AjaxOptions { UpdateTargetId = "master-section" })) {
        @Html.ValidationSummary(true)

	    <div class="editor-label">
        	@Html.LabelFor(x => x.SalesPerson)
	    </div>
        <div class="editor-label">
            @Html.EditorFor(x => x.SalesPersonId)
            @Html.ValidationMessageFor(x => x.SalesPersonId)
        </div>
            
	    <div class="editor-label">
	        @Html.LabelFor(x => x.Customer)
	    </div>
	    <div class="editor-field">
            @Html.TextBoxFor(x => x.CustomerId)
            @Html.ValidationMessageFor(x => x.CustomerId)
	    </div>

		<div id="hasCredit" class="editor-field">
            @Html.EditorFor(x => x.IsCredit)
        </div>

        <div id="delivery-box" class="editor-label">
            <input id="delivery" name="delivery" type="checkbox" value="false" style='float:left;margin:3px 3px 0 0'>
            <label for='delivery'>@Resources.ShipTo</label>
        </div>
	    <div id="shipTo" class="editor-field" style="display:none">
            @Html.TextBoxFor(x => x.ShipToId)
	    </div>
        
        <div class="action-buttons">
            <button type="submit" class="icon save">@Resources.Save</button>
            @Ajax.ActionLink(Resources.Discard, "DiscardChanges", new { id = Model.Id }, new AjaxOptions { UpdateTargetId = "master-section" }, new { @class = "button icon cancel" })
        </div>
    }
</fieldset>
<script type="text/javascript">
    $(function () {
    	@if(Model.SalesPerson != null) {
    		@:$("#SalesPersonId").tokenInput("add", { id: "@Model.SalesPerson.Id", name: "@Model.SalesPerson.Name"});
    	}
    	    	
        $("#CustomerId").tokenInput("@Url.Action("GetSuggestions", "Customers")", {
            hintText: "@Resources.HIntText",
            noResultsText: "@Resources.NoResultsText",
            searchingText: "@Resources.SearchingText",
            queryParam: "pattern", minChars: 1, tokenLimit: 1,
            @if(Model.Customer != null) {
            	@:prePopulate: [{ id: "@Model.Customer.Id", name: "@Model.Customer.Name"}],
            }
            onAdd: function (item) {
                if (item.hasCredit) {
                    $("#hasCredit").show("slow");
                }
            },
            onDelete: function (item){
                $("#IsCredit").attr("checked", false);                
                $("#hasCredit").hide("slow");
            }
        });
        
        @if(Model.Customer.HasCredit) {
        	<text>$("#hasCredit").show();</text>
        } else {
        	<text>$("#hasCredit").hide();</text>
        }
        
        $("#ShipToId").tokenInput(function() {
			var customer = $("#CustomerId").tokenInput("get")[0];
			
			if(typeof(customer) === "undefined") {
				customer = {id : 0};
			}
			
			return '@Url.Action("GetSuggestions", "Addresses", new { customer = 0 })' + customer.id; }, {
            hintText: "@Resources.HIntText",
            noResultsText: "@Resources.NoResultsText",
            searchingText: "@Resources.SearchingText",          
            queryParam: "pattern",tokenLimit: 1
        });
        
        @if(Model.ShipTo != null) {
        <text>
        	$("#ShipToId").tokenInput("add", { id: "@Model.ShipTo.Id", name: "@(Model.ShipTo.ToString ())"});
        	$("#delivery").attr("checked", true);
        	$("#shipTo").show();
        </text>
        }
        
        $("#delivery").change(function() {
            var show = $(this).is(":checked");
            
            if (show) {
                $("#shipTo").show("slow");
            } else {
                $("#shipTo").hide("slow");
                $("#ShipToId").tokenInput("clear");
            }
        });
    });
</script>