@using Mictlanix.BE
@using Mictlanix.BE.Model
@using Mictlanix.BE.Web.Helpers
@using Mictlanix.BE.Web.Models
@model Search<Product>

@{
    var CurrentUser = Html.CurrentUser() ?? new User();
    var Privilege = Html.GetPrivilege(CurrentUser, SystemObjects.PriceLists);
}

<p>@Html.ValidationMessageFor(x => x.Pattern)</p>

<table>
    <tr>
        <th>@Html.LabelFor(x => new Product().Code)</th>
        <th>@Html.LabelFor(x => new Product().Name)</th>
        <th>@Html.LabelFor(x => new Product().Model)</th>
        <th>@Html.LabelFor(x => new Product().UnitOfMeasurement)</th>
        <th>@Resources.Cost / @Resources.Prices</th>
    </tr>
@foreach (var item in Model.Results)
{
    <tr>
        <td class='center'>@Html.DisplayFor(x => item.Code)</td>
        <td>@Html.DisplayFor(x => item.Name)</td>
        <td class='center'>@Html.DisplayFor(x => item.Model)</td>
        <td class='center'>@Html.DisplayFor(x => item.UnitOfMeasurement)</td>
        <td class='tabular nowrap stretch'>
            <table>
            @foreach(var p in ViewBag.PriceLists) {
				var price = item.Prices.SingleOrDefault(x => x.List.Id == p.Id) ?? new ProductPrice ();
            	<tr data-product='@item.Id' data-list='@p.Id'>
            		<th class='right nowrap'>@p.Name</th>
            		<td class='nowrap'>
            			<span class='price'>@Html.DisplayFor(x => price.Value)</span>
        			</td>
            		<td class='nowrap'>
            			<span class='currency'>@Html.DisplayFor(x => price.Currency)</span>
        			</td>
            	</tr>
        	}
            </table>
        </td>
    </tr>
}
</table>
<div class='buttons right'>
	<label class='button left'>@Model.ToString()</label>@if (Model.HasPrev) {<a class='button middle icon prev icon-only paging' title='@Resources.PrevPage' href='javascript:void(0)'></a>}@if (Model.HasNext) {<a class='button right icon next icon-only paging' title='@Resources.NextPage' href='javascript:void(0)'></a>}
</div>
<script type='text/javascript'>
    $(function () {
@if(Privilege.AllowUpdate) {
<text>
		$('.price').addClass('editable').editable(function(value, settings) {
			var myself = $(this);
			var e = myself.closest('tr');
			var product = e.data('product');
			var list = e.data('list');
			var result = "error";
			
	        $.ajaxSetup({ async: false });
	        $.post('@Url.Action("EditPrice")', { Product: product, List: list, Value: value }, function (data) {
	            myself.addClass('succesful').switchClass('succesful', '', 3000);
	            result = data.value;
	        }, "json");
	        $.ajaxSetup({ async: true });
			
			return result;
		});
		
		$('.currency').addClass('editable').editable(function(value, settings) {
			var myself = $(this);
			var e = myself.closest('tr');
			var product = e.data('product');
			var list = e.data('list');
			var result = "error";

	        $.ajaxSetup({ async: false });
	        $.post('@Url.Action("EditCurrency")', { Product: product, List: list, Value: value }, function (data) {
	            myself.addClass('succesful').switchClass('succesful', '', 3000);
	            result = data.value;
	        }, "json");
	        $.ajaxSetup({ async: true });

			return value;
		},{
			data  :"{'@CurrencyCode.MXN':'MXN','@CurrencyCode.USD':'USD','@CurrencyCode.EUR':'EUR'}",
		    type  :'select',
		    submit:'OK'
		});
 </text>
 }
    	$('a.paging').click(function (e) {
  			var offset=@Model.Offset;
    		
  			if($(this).hasClass('next')) {
  				offset+=@Model.Limit;
  			} else {
  				offset-=@Model.Limit;
  			}
  			
    		e.preventDefault();
    		$('#activity-indicator').show();
    		$('#search-results').hide();
    		
    		$.post('@Url.Action("Index")', { Pattern: '@Model.Pattern', Offset: offset, Limit: @Model.Limit }, function(data) {
				$('#search-results').html(data);
				$('#search-results').show();
				$('#activity-indicator').hide();
			});
    	});
    });
</script>