@using Mictlanix.BE
@using Mictlanix.BE.Model
@using Mictlanix.BE.Web.Helpers
@using Mictlanix.BE.Web.Models
@model Search<Product>

@{
    var CurrentUser = Html.CurrentUser() ?? new User();
    var Privilege = Html.GetPrivilege(CurrentUser, SystemObjects.PriceLists);
}

<p>@Html.ValidationMessageFor(x => x.Pattern)</p>

<table>
    <tr>
        <th></th>
        <th>
            @Html.LabelFor(x => new Product().Code)
        </th>
        <th>
            @Html.LabelFor(x => new Product().SKU)
        </th>
        <th>
            @Html.LabelFor(x => new Product().Name)
        </th>
        <th>
            @Html.LabelFor(x => new Product().UnitOfMeasurement)
        </th>
        <th>
        	@Resources.Cost / @Resources.Prices
        </th>
    </tr>
@foreach (var item in Model.Results)
{
    <tr>
        <td><img class="small" src="@Url.Content(item.Photo)" alt="@item.Code"/></td>
        <td class="center">@Html.DisplayFor(x => item.Code)</td>
        <td class="center">@Html.DisplayFor(x => item.SKU)</td>
        <td>@Html.DisplayFor(x => item.Name)</td>
        <td class="center">@Html.DisplayFor(x => item.UnitOfMeasurement)</td>
        <td class="tabular">
            <table>
            	<tr>
            		<th class="right">@Resources.Cost</th>
            		<td class="number cost" data-product="@item.Id">@Html.DisplayFor(x => item.Cost)</td>
            	</tr>
            @foreach(var p in ViewBag.PriceLists) {
				var price = item.Prices.SingleOrDefault(x => x.List.Id == p.Id) ?? new ProductPrice ();
            	<tr>
            		<th class="right nowrap">@p.Name</th>
            		<td class="number price" data-product="@item.Id" data-list="@p.Id">@Html.DisplayFor(x => price.Price)</td>
            	</tr>
        	}
            </table>
        </td>
    </tr>
}
</table>
<div class="buttons right">
	<label class="button left">@Model.ToString()</label>@if (Model.HasPrev) {<a class="button middle icon prev icon-only paging" title="@Resources.PrevPage" href="javascript:void(0)"></a>}@if (Model.HasNext) {<a class="button right icon next icon-only paging" title="@Resources.NextPage" href="javascript:void(0)"></a>}
</div>
<script type="text/javascript">
    $(function () {
@if(Privilege.AllowUpdate) {
<text>
		$('.cost').addClass('editable').editable(function(value, settings) {
			var e = $(this);
			var product = e.data("product");
			var result = "error";
			
	        $.ajaxSetup({ async: false });
	        $.post('@Url.Action("EditCost")', { Id: product, Value: value }, function (data) {
	            e.switchClass('editable', 'editable-ok').switchClass('editable-ok', 'editable', 3000);
	            result = data.value;
	        }, "json");
	        $.ajaxSetup({ async: true });
			
			return result;
		});
		$('.price').addClass('editable').editable(function(value, settings) {
			var e = $(this);
			var product = e.data("product");
			var list = e.data("list");
			var result = "error";
			
	        $.ajaxSetup({ async: false });
	        $.post('@Url.Action("EditPrice")', { Product: product, List: list, Value: value }, function (data) {
	            e.switchClass('editable', 'editable-ok').switchClass('editable-ok', 'editable', 3000);
	            result = data.value;
	        }, "json");
	        $.ajaxSetup({ async: true });
			
			return result;
		});
 </text>
 }
    	$('a.paging').click(function (e) {
  			var offset=@Model.Offset;
    		
  			if($(this).hasClass('next')) {
  				offset+=@Model.Limit;
  			} else {
  				offset-=@Model.Limit;
  			}
  			
    		e.preventDefault();
    		$("#activity-indicator").show();
    		$("#search-results").hide();
    		
    		$.post('@Url.Action("Index")', { Pattern: '@Model.Pattern', Offset: offset, Limit: @Model.Limit }, function(data) {
				$('#search-results').html(data);
				$('#search-results').show();
				$('#activity-indicator').hide();
			});
    	});
    });
</script>