@using Mictlanix.BE
@using Mictlanix.BE.Model
@using Mictlanix.BE.Web.Helpers
@model FiscalDocument

@{
    ViewBag.Title = Resources.Title_NewInvoice;
}

<link href="@Url.Content("~/Content/selection-options.css")" rel="stylesheet" type="text/css" />

<h2>@Resources.DisplayName_NewInvoice</h2> 

<div id="sales-invoice">
    <fieldset>
        <legend>@Resources.DisplayName_InvoiceInformation</legend>
            @using (Html.BeginForm())
            {
                @Html.ValidationSummary(true)

                <div class="editor-label">
                    @Html.LabelFor(x => x.Issuer)
                    @Html.TextBoxFor(x => x.IssuerId)
                    @Html.ValidationMessageFor(x => x.IssuerId)
                </div>
                
                <div id="div-batch" class="editor-label"></div>

                <div class="editor-label">
                    @Html.LabelFor(x => x.Customer)
                    @Html.EditorFor(x => x.CustomerId)
                    @Html.ValidationMessageFor(x => x.CustomerId)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(x => x.BillTo)
                    @Html.EditorFor(x => x.BillToId)
                    @Html.ValidationMessageFor(x => x.BillToId)
                </div>
                
		        <div class="editor-field">
		            <ul class="selection-options">
		            @foreach (var item in new []{ PaymentMethod.Unidentified,
		            							  PaymentMethod.Cash,
		            							  PaymentMethod.DebitCard,
		            							  PaymentMethod.CreditCard,
		            							  PaymentMethod.Check,
		            							  PaymentMethod.BankDeposit,
		            							  PaymentMethod.WireTransfer }) {
		                <li>
			                <label>
			                    @Html.RadioButtonFor(x => x.PaymentMethod, (int)item)
			                    <span class="option-desc">
				                    <span class="icon dollar">@Resources.Payment</span>
				                    <span class="text">@item.GetDisplayName()</span>
			                    </span>
			                </label>
			            </li>
		            }
		            </ul>
		        </div>

		        <div id="reference" style="display:none">
		            <div class="display-label">
		                @Html.LabelFor(x => x.PaymentReference)
		            </div>
		            <div class="display-field">
		                @Html.EditorFor(x => x.PaymentReference)
		            </div>
		        </div>

                <div class="action-buttons">
                    <button type="submit" class="icon save">@Resources.Save</button>
                </div>
            }
    </fieldset>
</div>
<div id="back-to-list">
    @Html.ActionLink(Resources.BackToList, "Index", new { }, new { @class = "button icon back" })
</div>
<style type="text/css">
ul.token-input-list {
  width:100%;
}
</style>
<script type="text/javascript">
    $(function () {
        $("#IssuerId").tokenInput("@Url.Action("GetSuggestions", "Taxpayers")", {
            hintText: "@Resources.HIntText",
            noResultsText: "@Resources.NoResultsText",
            searchingText: "@Resources.SearchingText",
            queryParam: "pattern",
            minChars: 1,
            tokenLimit: 1,
            onAdd: function (item) {
                $.get("/FiscalDocuments/GetBatchSelector/" + item.id, function (data) {
		            $("#div-batch").html(data);
		        });
            },
            onDelete: function (item){
                $("#div-batch").html(null);
            }
        });
        
        $("#BillToId").tokenInput(function() {
			var customer = $("#CustomerId").tokenInput("get")[0];
			
			if(typeof(customer) === "undefined") {
				customer = {id : 0};
			}
			
			return "@Url.Action("GetSuggestions", "Addresses", new { customer = 0 })" + customer.id; }, {
            hintText: "@Resources.HIntText",
            noResultsText: "@Resources.NoResultsText",
            searchingText: "@Resources.SearchingText",          
            queryParam: "pattern",minChars: 3,tokenLimit: 1
        });
        
    	$("#PaymentMethod").attr("checked", true);
        $(".selection-options>li:first-child").addClass("selected");
        
        $(".selection-options>li").click(function () {
            $(".selection-options>li").removeClass("selected");
            $(this).addClass("selected");
        });
        
        $(":radio").change(function() {
            var status = $("#PaymentMethod:checked").val();
            
            if (status === "0" || status === "1") {
                $("#reference").hide("slow");
            } else {
                $("#reference").show("slow");
            }
        });
        
        $('form').submit(function(){
            $("button.save").attr("disabled", "disabled");
		    $("button.save").html("@Resources.PleaseWait");
		});
    });
</script>