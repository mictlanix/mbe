@using Mictlanix.BE
@using Mictlanix.BE.Model
@using Mictlanix.BE.Web.Models
@using Mictlanix.BE.Web.Helpers
@model FiscalDocument
@{
    Layout = null;
    ViewBag.WindowTitle = string.Format (Resources.FiscalDocumentFilenameFormatString,
                                         Model.Issuer.Id, Model.Batch, Model.Serial);
    ViewBag.Title = Resources.FiscalDocument;
    ViewBag.Store = Model.Store;
    ViewBag.Taxpayer = Model.Issuer.Id;
    ViewBag.TaxpayerName = Model.IssuerName;
    ViewBag.Address = Model.IssuedAt ?? Model.Store.Address;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@ViewBag.WindowTitle</title>
    <link href='@Url.Content("~/Content/bootstrap.min.css")' rel='stylesheet' type='text/css' />
    <link href='@Url.Content("~/Content/fonts/secrettypewriter/stylesheet.css")' rel='stylesheet' type='text/css' />
    <link href='@Url.Content("~/Content/fonts/brother-deluxe/stylesheet.css")' rel='stylesheet' type='text/css' />
    <style type='text/css'>
	@@font-face {
	  font-family: 'Roboto Mono';
	  font-style: normal;
	  font-weight: 400;
	  src: url(http://fonts.gstatic.com/s/robotomono/v4/hMqPNLsu_dywMa4C_DEpY7rIa-7acMAeDBVuclsi6Gc.woff) format('woff');
	}
    @@page {
	    size: US-Letter;
	    margin: 10mm;
	}
	html, body {
		width: 100%;
		height: 100%;
		margin: 0;
		padding: 0;
	}
	body {
	    font:normal 9pt 'VeteranTypewriter-Regular';
	}
	.logo {
		width:48mm;
	}
	header {
		margin-bottom:4mm;
	}
	h1,h2,h3,h4 {
		text-align:left;
		margin:1mm 1mm 1mm 0;
	}
	h1, h2 {
		font:normal 10pt 'BrotherDeluxe1350Font';
	}
	h2 {
		font-weight:bold;
	}
	h3, h4 {
		font:normal 10pt 'VeteranTypewriter-Regular';
	}
	h4 {
		font-size:9pt;
	}
	p {
	  margin: 0 0 5px;
	}
	strong {
		font-family:'BrotherDeluxe1350Font';
	}
	table {
		width:100%;
	}
	thead, tfoot { display: table-row-group; }
	table > thead > tr > th,
	table > tbody > tr > th,
	table > tfoot > tr > th,
	table > thead > tr > td,
	table > tbody > tr > td,
	table > tfoot > tr > td {
		padding: 4px;
		line-height: 1.42857143;
		vertical-align: top;
		font:normal 10pt 'VeteranTypewriter-Regular';
	}
	table > thead > tr > th {
		border-bottom: 1px solid #ddd;
		font-size:10pt;
	}
	table > tfoot > tr > th, 
	table > tfoot > tr > td {
		font:normal 9pt 'BrotherDeluxe1350Font';
	}
	table > tbody > tr:nth-child(odd) > td,
	table > tbody > tr:nth-child(odd) > th {
		background-color: #D9F6F6 !important;
	}
	.uppercase {
		text-transform:uppercase;
	}
	.lowercase {
		text-transform:lowercase;
	}
	.capitalize {
		text-transform:capitalize;
	}
	.mylabel {
		padding: .1em .1em .2em;
		font-weight: bold;
		background-color: #D9F6F6 !important;
		font:normal 9pt 'VeteranTypewriter-Regular';
	}
	.mylabel-rounded {
		display:inline-block;
		padding:1em 2em;
		background-color: #D9F6F6 !important;
		font:normal 9pt 'VeteranTypewriter-Regular';
		border-radius:2.5em;
	}
	.mylabel-rounded strong {
		font-family:'BrotherDeluxe1350Font';
		font-size:8pt;
	}
	.nowrap {
		white-space:nowrap;
	}
	.monospaced {
		font:normal 6pt 'Roboto Mono', monospace;
	}
	@@media print {
		.media, tfoot {page-break-inside: avoid}
		a[href]:after {content: none;}
	}
    </style>
</head>
<body>
    <header>
		<div class="pull-right monospaced">
			@Resources.FiscalDocumentLegendV3
		</div>
    	<div class="row">
			<div class="col-xs-5 text-right">
	            <img class="logo" src='@Url.Content("~/Content/images/tinbox.png")' alt="Logo" />
	 		</div>
			<div class="col-xs-6 text-center" style="padding-top:3mm">
		        <h1 class="text-center uppercase">
		            @if (!string.IsNullOrEmpty (ViewBag.TaxpayerName)) {
		        		@ViewBag.TaxpayerName<br/>
		        	}
		        	@if (!string.IsNullOrEmpty (ViewBag.Taxpayer)) {
		        		@ViewBag.Taxpayer
		        	}
		        </h1>
		        <h3 class="text-center">
		        	@ViewBag.Address.StreetAndNumber,
		        	@ViewBag.Address.Neighborhood,
		    	@if (!string.IsNullOrEmpty (ViewBag.Address.Locality)) {
		        	<text>@ViewBag.Address.Locality,</text>
		    	}
		        	@ViewBag.Address.PostalCode<br/>
		        	@ViewBag.Address.Borough,
		        	@ViewBag.Address.State
		    	</h3>
		    	<h4 class="text-center">
		    		@Resources.TaxRegime:
		    		@Html.DisplayFor(x => x.IssuerRegime)
		    	</h4>
	 		</div>
		</div>
    </header>
	<div class="row">
		<div class="col-xs-6 text-left">
			<div class="row">
				<div class="col-xs-12 uppercase">
					<h2>@Resources.Customer</h2>
				</div>
			 	<div class="col-xs-12">
			 		<p><span class="mylabel">@Resources.TaxpayerId</span></p>
		 		</div>
		 		<div class="col-xs-12">
		 			<p>@Html.DisplayFor(x => x.Recipient)</p>
		 		</div>
			 	<div class="col-xs-12">
			 		<p><span class="mylabel">@Resources.Name</span></p>
		 		</div>
		 		<div class="col-xs-12">
		 			<p>@Html.DisplayFor(x => x.RecipientName)</p>
	 			</div>
	 		@if(Model.RecipientAddress != null) {
			 	<div class="col-xs-12">
			 		<p><span class="mylabel">@Resources.Address</span></p>
		 		</div>
		 		<div class="col-xs-12">
		 			<p>
					    @Html.DisplayFor(x => x.RecipientAddress.Street)
					    @Html.DisplayFor(x => x.RecipientAddress.ExteriorNumber)
					    @Html.DisplayFor(x => x.RecipientAddress.InteriorNumber)<br>
					    @Html.DisplayFor(x => x.RecipientAddress.Neighborhood),
					    @Html.DisplayFor(x => x.RecipientAddress.Borough)<br>
					    @Html.DisplayFor(x => x.RecipientAddress.State),
					    @Html.DisplayFor(x => x.RecipientAddress.Country),
					    @Html.DisplayFor(x => x.RecipientAddress.PostalCode)
				    </p>
		 		</div>
			}
	 		</div>
		</div>
		<div class="col-xs-6 text-right">
			<div class="row">
				<div class="col-xs-12">
					<h2 class="text-right uppercase">@Model.Type.GetDisplayName() @Html.DisplayFor(x => x.Batch) @Html.DisplayFor(x => x.Serial)</h2>
				</div>
				<div class="col-xs-12">
					<p><span class="mylabel">@Resources.StampId</span></p>
				</div>
		 		<div class="col-xs-12">
					<p>@Html.DisplayFor(x => x.StampId)</p>
		 		</div>
				<div class="col-xs-12">
					<p><span class="mylabel">@Resources.IssuedLocation, @Resources.DateTime</span></p>
				</div>
		 		<div class="col-xs-12">
					<p>@Html.DisplayFor(x => x.IssuedLocation) @Html.DisplayFor(x => x.Issued)</p>
		 		</div>
				<div class="col-xs-12">
					<p><span class="mylabel">@Resources.CertificateNumber</span></p>
				</div>
		 		<div class="col-xs-12">
					<p>@Html.DisplayFor(x => x.IssuerCertificateNumber)</p>
		 		</div>
			</div>
		</div>
	</div>

@if (!string.IsNullOrEmpty (Model.Reference)) {
	<div class="row">
		<div class="col-xs-12 text-right">
			<p>@Resources.Reference: @Html.DisplayFor(x => x.Reference)</p>
		</div>
	</div>
}

    <div style="min-height: 2.2mm; border-top: #C73F33 solid 1px; border-bottom: #C73F33 solid 3px"></div>
   
    <table  style="border-spacing:0 4px;border-collapse: separate;">
        <thead>
            <tr>
                <th class="col-xs-1 text-center">@Resources.Quantity</th>
                <th class="col-xs-1 text-center">@Resources.UnitOfMeasurementShort</th>
                <th class="col-xs-2 text-center">@Resources.ProductCode</th>
                <th class="col-xs-5 text-center">@Resources.ProductName</th>
                <th class="col-xs-1 text-center">@Resources.Price</th>
                <th class="col-xs-1 text-center">@Resources.Discount</th>
                <th class="col-xs-1 text-center">@Resources.Amount</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Details) {
                <tr class="alt">
                    <td class="nowrap text-right">@Html.DisplayFor(x => item.Quantity)</td>
                    <td class="nowrap text-center">@Html.DisplayFor(x => item.UnitOfMeasurement)</td>
                    <td class="text-center">@Html.DisplayFor(x => item.ProductCode)</td>
                    <td class="text-center">
                    	@Html.DisplayFor(x => item.ProductName)
                    	@if(!string.IsNullOrWhiteSpace (item.Comment)) {
                    		<div style="font-family: 'Times New Roman', Times, serif;text-align: justify;font-style: italic;font-size: 85%;">@Html.DisplayFor(x => item.Comment)</div>
                    	}
                    </td>
                    <td class="nowrap text-right">@Html.DisplayFor(x => item.NetPrice)</td>
                    <td class="nowrap text-right">@Html.DisplayFor(x => item.Discount)</td>
                    <td class="nowrap text-right">@Html.DisplayFor(x => item.Subtotal)</td>
                </tr>
            }
        </tbody>
    </table>

    <div style="min-height: 2.2mm; border-top: #C73F33 solid 3px; border-bottom: #C73F33 solid 1px"></div>

    <table>
    	<tfoot>
	        <tr>
	            <td rowspan="2" class="col-xs-10 text-center" style="vertical-align:middle">
	                <div style="border-top: solid black 1px; border-bottom:solid black 1px; margin: 0 1cm 0 1cm;">
	                    @Html.CurrencyToString(Model.Total, Model.Currency)
	                </div>
	            </td>
	            <td class="col-xs-1 nowrap text-right">@Resources.Subtotal</td>
	            <td class="col-xs-1 nowrap text-right">@Html.DisplayFor(x => x.Subtotal)</td>
	        </tr>
	        <tr>
	            <td class="col-xs-1 nowrap text-right">@Resources.Taxes</td>
	            <td class="col-xs-1 nowrap text-right">@Html.DisplayFor(x => x.Taxes)</td>
	        </tr>
		@if (Model.RetentionRate > 0m) {
	        <tr>
	        	<td class="col-xs-10"></td>
	            <td class="col-xs-1 nowrap text-right">@Resources.RetentionTaxes</td>
	            <td class="col-xs-1 nowrap text-right">@Html.DisplayFor(x => x.RetentionTaxes)</td>
	        </tr>
		}
	        <tr>
	            <td class="col-xs-10 nowrap"><h2 class="row">@Resources.SinglePayment</h2></td>
	            <td class="col-xs-1 nowrap text-right">@Resources.Total</td>
	            <td class="col-xs-1 nowrap text-right">@Html.DisplayFor(x => x.Total)</td>
	        </tr>
		</tfoot>
    </table>
 
	<div class="row">
    @if (Model.Currency != CurrencyCode.MXN) {
	 	<div class="col-xs-12">
	 		<p><span class="mylabel">@Resources.ExchangeRate / @Resources.Currency</span></p>
			<p>@Html.DisplayFor(x => x.ExchangeRate) / @Model.Currency.GetDisplayName()</p>
		</div>
    }
	 	<div class="col-xs-12">
	 		<p><span class="mylabel">@Resources.PaymentMethod</span></p>
			<p>@Model.PaymentMethod.GetDisplayName()</p>
		</div>
    @if (Model.PaymentMethod != PaymentMethod.NA && Model.PaymentMethod != PaymentMethod.Cash) {
	 	<div class="col-xs-12">
	 		<p><span class="mylabel">@Resources.PaymentReference</span></p>
			<p>@Html.DisplayFor(x => x.PaymentReference)</p>
		</div>
    }
	</div>

	<div class="row">
		<div class="col-xs-12">
			<div class="media" style="border: 1px dashed silver;margin-bottom:5px;">
				<div class="pull-left">
					<img class="media-object" style="width: 32mm" src='@Url.Action("QRCode", new { id = Model.Id })' />
				</div>
				<div class="media-body">
					<p class="monospaced">
						@Resources.AuthorityCertificateNumber: @Html.DisplayFor(x => x.AuthorityCertificateNumber)
						@Resources.StampDate: @Html.DisplayFor(x => x.Stamped)<br />
						@Resources.OriginalString<br />
						@Html.DisplayFor(x => x.OriginalString)<br />
						@Resources.IssuerDigitalSeal<br />
						@Html.DisplayFor(x => x.IssuerDigitalSeal)<br />
						@Resources.AuthorityDigitalSeal<br />
						@Html.DisplayFor(x => x.AuthorityDigitalSeal)
					</p>
				</div>
			</div>
		</div>
	</div>

	<div class="row">
		<div class="col-xs-6 text-left">
			<p class="mylabel-rounded">
				<strong>SANTANDER</strong><br>
				CLABE 0141 8092 0017 1010 27<br>
				CUENTA 92-00171010-2<br>
				SUCURSAL 7868 POPOCATEPETL
			</p>
		</div>
		<div class="col-xs-6 text-right">
			<p class="mylabel-rounded">
				<strong>BANAMEX</strong><br>
				CLABE 0021 8007 4600 4140 05<br>
				CUENTA 41400<br>
				SUCURSAL 746 PATRIOTISMO HOLBEIN
			</p>
		</div>
	</div>
</body>
</html>
