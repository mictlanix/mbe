@using Mictlanix.BE
@using Mictlanix.BE.Model
@using Mictlanix.BE.Web.Models
@using Mictlanix.BE.Web.Helpers
@model FiscalDocument
@{
    Layout = null;
    ViewBag.WindowTitle = string.Format (Resources.FiscalDocumentFilenameFormatString,
                                         Model.Issuer.Id, Model.Batch, Model.Serial);
    ViewBag.Store = Model.Store;
    ViewBag.Taxpayer = Model.Issuer.Id;
    ViewBag.TaxpayerName = Model.IssuerName;
    ViewBag.Address = Model.IssuedAt ?? Model.Store.Address;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@ViewBag.WindowTitle</title>
    @Styles.Render("~/Content/print")
</head>
<body>
    <header>
    	<div class="row">
			<div class="col-xs-7 text-center" style="padding-top:3mm">
		        <h1 class="text-center uppercase">
		            @if (!string.IsNullOrEmpty (ViewBag.TaxpayerName)) {
		        		@ViewBag.TaxpayerName<br/>
		        	}
		        	@if (!string.IsNullOrEmpty (ViewBag.Taxpayer)) {
		        		@ViewBag.Taxpayer
		        	}
		        </h1>
		        <h3 class="text-center">
		        	@ViewBag.Address.StreetAndNumber<br/>
		        	@ViewBag.Address.Neighborhood,
		    	@if (!string.IsNullOrEmpty (ViewBag.Address.Locality)) {
		        	<text>@ViewBag.Address.Locality,</text>
		    	}
		        	@ViewBag.Address.PostalCode<br/>
		        	@ViewBag.Address.Borough,
		        	@ViewBag.Address.State
		    	</h3>
		    	<h4 class="text-center">
		    		@Resources.TaxRegime:
		    		@Html.DisplayFor(x => x.IssuerRegime)
		    	</h4>
	 		</div>
			<div class="col-xs-5 text-right">
	        	@if(!string.IsNullOrEmpty(ViewBag.Store.Logo)) {
	            <img class="logo" src='@Url.Content(ViewBag.Store.Logo)' alt="Logo" />
	            }
	 		</div>
		</div>
    </header>

	<div class="row">
		<div class="col-xs-6 text-left">
			<div class="row">
				<div class="col-xs-12 uppercase">
					<h2>@Resources.Customer</h2>
				</div>
			 	<div class="col-xs-12">
			 		<p><span class="mylabel">@Resources.TaxpayerId</span></p>
		 		</div>
		 		<div class="col-xs-12">
		 			<p>@Html.DisplayFor(x => x.Recipient)</p>
		 		</div>
			 	<div class="col-xs-12">
			 		<p><span class="mylabel">@Resources.Name</span></p>
		 		</div>
		 		<div class="col-xs-12">
		 			<p>@Html.DisplayFor(x => x.RecipientName)</p>
	 			</div>
	 		@if(Model.RecipientAddress != null) {
			 	<div class="col-xs-12">
			 		<p><span class="mylabel">@Resources.Address</span></p>
		 		</div>
		 		<div class="col-xs-12">
		 			<p>
					    @Html.DisplayFor(x => x.RecipientAddress.Street)
					    @Html.DisplayFor(x => x.RecipientAddress.ExteriorNumber)
					    @Html.DisplayFor(x => x.RecipientAddress.InteriorNumber)<br>
					    @Html.DisplayFor(x => x.RecipientAddress.Neighborhood),
					    @Html.DisplayFor(x => x.RecipientAddress.Borough)<br>
					    @Html.DisplayFor(x => x.RecipientAddress.State),
					    @Html.DisplayFor(x => x.RecipientAddress.Country),
					    @Html.DisplayFor(x => x.RecipientAddress.PostalCode)
				    </p>
		 		</div>
			}
	 		</div>
		</div>
		<div class="col-xs-6 text-right">
			<div class="row">
				<div class="col-xs-12">
					<h2 class="text-right uppercase">@Model.Type.GetDisplayName() @Html.DisplayFor(x => x.Batch) @Html.DisplayFor(x => x.Serial)</h2>
				</div>
				<div class="col-xs-12">
					<p><span class="mylabel">@Resources.StampId</span></p>
				</div>
		 		<div class="col-xs-12">
					<p>@Html.DisplayFor(x => x.StampId)</p>
		 		</div>
				<div class="col-xs-12">
					<p><span class="mylabel">@Resources.IssuedLocation, @Resources.DateTime</span></p>
				</div>
		 		<div class="col-xs-12">
					<p>@Html.DisplayFor(x => x.IssuedLocation) @Html.DisplayFor(x => x.Issued)</p>
		 		</div>
				<div class="col-xs-12">
					<p><span class="mylabel">@Resources.CertificateNumber</span></p>
				</div>
		 		<div class="col-xs-12">
					<p>@Html.DisplayFor(x => x.IssuerCertificateNumber)</p>
		 		</div>
			</div>
		</div>
	</div>

@if (!string.IsNullOrEmpty (Model.Reference)) {
	<div class="row">
		<div class="col-xs-12 text-right">
			<p>@Resources.Reference: @Html.DisplayFor(x => x.Reference)</p>
		</div>
	</div>
}

@if (!string.IsNullOrEmpty (Model.Comment)) {
	<div class="row">
		<div class="col-xs-12 text-justify">
			<p>@Html.DisplayFor(x => x.Comment)</p>
		</div>
	</div>
}
		
    <div style="min-height: 2.2mm; border-top: #333 solid 1px; border-bottom: #333 solid 3px"></div>
   
    <table  style="border-spacing:0 4px;border-collapse: separate;">
        <thead>
            <tr>
                <th class="col-xs-1 text-center">@Resources.QuantityShort</th>
                <th class="col-xs-1 text-center">@Resources.UnitOfMeasurementShort</th>
                <th class="col-xs-2 text-center">@Resources.ProductCode</th>
                <th class="col-xs-5 text-center">@Resources.ProductName</th>
                <th class="col-xs-1 text-center">@Resources.Price</th>
                <th class="col-xs-1 text-center">@Resources.Discount_Abbr</th>
                <th class="col-xs-1 text-center">@Resources.Amount</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Details) {
                <tr class="alt">
                    <td class="nowrap text-right">@Html.DisplayFor(x => item.Quantity)</td>
                    <td class="nowrap text-center">@Html.DisplayFor(x => item.UnitOfMeasurement)</td>
                    <td class="text-center">@Html.DisplayFor(x => item.ProductCode)</td>
                    <td class="text-center">
                    	@Html.DisplayFor(x => item.ProductName)
                    	@if(!string.IsNullOrWhiteSpace (item.Comment)) {
                    		<div style="text-align: justify;">@Html.DisplayFor(x => item.Comment)</div>
                    	}
                	</td>
                    <td class="nowrap text-right">@Html.DisplayFor(x => item.NetPrice)</td>
                    <td class="nowrap text-right">@Html.DisplayFor(x => item.DiscountRate)</td>
                    <td class="nowrap text-right">@Html.DisplayFor(x => item.Subtotal)</td>
                </tr>
            }
        </tbody>
    </table>

    <div style="min-height: 2.2mm; border-top: #333 solid 3px; border-bottom: #333 solid 1px"></div>

    <table>
    	<tfoot>
	        <tr>
	            <td rowspan="@(Model.Discount > 0m ? 3 : 2)" class="col-xs-10 text-center" style="vertical-align:middle">
	                <p class="amount-words">@Html.CurrencyToString(Model.Total, Model.Currency)</p>
	            </td>
	            <td class="col-xs-1 nowrap text-right">@Resources.Subtotal</td>
	            <td class="col-xs-1 nowrap text-right">@Html.DisplayFor(x => x.Subtotal)</td>
	        </tr>
        @if (Model.Discount > 0m) {
            <tr>
                <td class="col-xs-1 nowrap text-right">@Resources.Discount</td>
                <td class="col-xs-1 nowrap text-right">@Html.DisplayFor(x => x.Discount)</td>
            </tr>
        }
	        <tr>
	            <td class="col-xs-1 nowrap text-right">@Resources.Taxes</td>
	            <td class="col-xs-1 nowrap text-right">@Html.DisplayFor(x => x.Taxes)</td>
	        </tr>
		@if (Model.RetentionRate > 0m) {
	        <tr>
	        	<td class="col-xs-10"></td>
	            <td class="col-xs-1 nowrap text-right">@Resources.RetentionTaxes</td>
	            <td class="col-xs-1 nowrap text-right">@Html.DisplayFor(x => x.RetentionTaxes)</td>
	        </tr>
		}
	        <tr>
	            <td class="col-xs-10 nowrap"><h2 class="row">@Resources.SinglePayment</h2></td>
	            <td class="col-xs-1 nowrap text-right">@Resources.Total</td>
	            <td class="col-xs-1 nowrap text-right">@Html.DisplayFor(x => x.Total)</td>
	        </tr>
		</tfoot>
    </table>
 
	<div class="row">
    @if (Model.Currency != CurrencyCode.MXN) {
	 	<div class="col-xs-3">
	 		<p><span class="mylabel">@Resources.ExchangeRate / @Resources.Currency</span></p>
			<p>@Html.DisplayFor(x => x.ExchangeRate) / @Model.Currency.GetDisplayName()</p>
		</div>
    }
	 	<div class="col-xs-3">
	 		<p><span class="mylabel">@Resources.PaymentMethod</span></p>
			<p>@string.Format("{0:D2}", (int) Model.PaymentMethod) : @Model.PaymentMethod.GetDisplayName()</p>
		</div>
    @if (Model.PaymentMethod != PaymentMethod.NA && Model.PaymentMethod != PaymentMethod.Cash) {
	 	<div class="col-xs-3">
	 		<p><span class="mylabel">@Resources.PaymentReference</span></p>
			<p>@Html.DisplayFor(x => x.PaymentReference)</p>
		</div>
    }
	</div>

	<div class="row">
		<div class="col-xs-12">
			<div class="media" style="border: 1px dashed silver;margin-bottom:5px;">
				<a class="pull-left" href="#">
					<img class="media-object" style="width: 32mm" src='@Url.Action("QRCode", new { id = Model.Id })' />
				</a>
				<div class="media-body">
					<p class="monospaced">
						@Resources.AuthorityCertificateNumber: @Html.DisplayFor(x => x.AuthorityCertificateNumber)
						@Resources.StampDate: @Html.DisplayFor(x => x.Stamped)<br />
						@Resources.OriginalString<br />
						@Html.DisplayFor(x => x.OriginalString)<br />
						@Resources.IssuerDigitalSeal<br />
						@Html.DisplayFor(x => x.IssuerDigitalSeal)<br />
						@Resources.AuthorityDigitalSeal<br />
						@Html.DisplayFor(x => x.AuthorityDigitalSeal)
					</p>
				</div>
			</div>
		</div>
	</div>
		<div class="pull-right" style="font-size:8pt">
			@Resources.FiscalDocumentLegendV3
		</div>
</body>
</html>
