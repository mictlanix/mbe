@using Mictlanix.BE
@using Mictlanix.BE.Model;
@using Mictlanix.BE.Web.Helpers;
@model FiscalDocument

<link href="@Url.Content("~/Content/selection-options.css")" rel="stylesheet" type="text/css" />

<fieldset>
    <legend>@Resources.DisplayName_InvoiceInformation</legend>
        @using (Ajax.BeginForm(new AjaxOptions { UpdateTargetId = "master-section" }))
        {
            @Html.ValidationSummary(true)
            
            <div class="editor-label">
                @Html.LabelFor(x => x.Issuer)
                @Html.TextBoxFor(x => x.IssuerId)
                @Html.ValidationMessageFor(x => x.IssuerId)
            </div>
            
            <div id="div-batch" class="editor-label"></div>
            
            <div class="editor-label">
                @Html.LabelFor(model => model.Customer)
                @Html.EditorFor(model => model.CustomerId)
                @Html.ValidationMessageFor(model => model.CustomerId)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.BillTo)
                @Html.EditorFor(model => model.BillToId)
                @Html.ValidationMessageFor(model => model.BillToId)
            </div>

	        <div class="editor-field">
	            <ul class="selection-options">
	            @foreach (var item in new []{ PaymentMethod.Unidentified,
	            							  PaymentMethod.Cash,
	            							  PaymentMethod.DebitCard,
	            							  PaymentMethod.CreditCard,
	            							  PaymentMethod.Check,
	            							  PaymentMethod.BankDeposit,
	            							  PaymentMethod.WireTransfer }) {
	                <li>
		                <label>
		                    @Html.RadioButtonFor(x => x.PaymentMethod, (int)item)
		                    <span class="option-desc">
			                    <span class="icon dollar">@Resources.Payment</span>
			                    <span class="text">@item.GetDisplayName()</span>
		                    </span>
		                </label>
		            </li>
	            }
	            </ul>
	        </div>

	        <div id="reference" style="display:none">
	            <div class="display-label">
	                @Html.LabelFor(x => x.PaymentReference)
	            </div>
	            <div class="display-field">
	                @Html.EditorFor(x => x.PaymentReference)
	            </div>
	        </div>
		        
            <p>
            	<button type="submit" class="icon save">@Resources.Save</button>
        		@Ajax.ActionLink(Resources.Discard, "DiscardChanges", new { id = Model.Id }, new AjaxOptions { UpdateTargetId = "master-section" }, new { @class = "button icon cancel" })
        	</p>
        }
</fieldset>
<script type="text/javascript">
    $(function () {
        $("#IssuerId").tokenInput("@Url.Action("GetSuggestions", "Taxpayers")", {
            hintText: "@Resources.HIntText",
            noResultsText: "@Resources.NoResultsText",
            searchingText: "@Resources.SearchingText",
            queryParam: "pattern",
            minChars: 1,
            tokenLimit: 1,
            prePopulate: [{ id: "@Model.Issuer.Id", name: "@Model.Issuer.Name"}],
            onAdd: function (item) {
                $.get("/FiscalDocuments/GetBatchSelector/" + item.id, function (data) {
		            $("#div-batch").html(data);
		        });
            },
            onDelete: function (item){
                $("#div-batch").html(null);
            }
        });
        
        $.get("/FiscalDocuments/GetBatchSelector/@Model.Issuer.Id", function (data) {
            $("#div-batch").html(data);
        });

        $("#CustomerId").tokenInput("add", { id: "@Model.Customer.Id", name: "@Model.Customer.Name"});
        
        $("#BillToId").tokenInput(function() {
			var customer = $("#CustomerId").tokenInput("get")[0];
			
			if(typeof(customer) === "undefined") {
				customer = {id : 0};
			}
			
			return "@Url.Action("GetSuggestions", "Addresses", new { customer = 0 })" + customer.id; }, {
            hintText: "@Resources.HIntText",
            noResultsText: "@Resources.NoResultsText",
            searchingText: "@Resources.SearchingText",          
            queryParam: "pattern",minChars: 3,tokenLimit: 1
        });
        
        $("#BillToId").tokenInput("add", { id: "@Model.BillTo.Id", name: "@string.Format("{1} ({0})", Model.BillTo.TaxpayerId, Model.BillTo.TaxpayerName)"});
        
        $(".selection-options>li").click(function () {
            $(".selection-options>li").removeClass("selected");
            $(this).addClass("selected");
        });
        
        $(":radio").change(function() {
            var status = $("#PaymentMethod:checked").val();
            
            if (status === "0" || status === "1") {
                $("#reference").hide("slow");
            } else {
                $("#reference").show("slow");
            }
        });
        
        $(":radio[value=" + @((int)Model.PaymentMethod) + "]").attr("checked", true).closest("li").addClass("selected");
        $(":radio").change();
    });
</script>