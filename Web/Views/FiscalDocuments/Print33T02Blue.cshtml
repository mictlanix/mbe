@using Mictlanix.BE
@using Mictlanix.BE.Model
@using Mictlanix.BE.Web.Models
@using Mictlanix.BE.Web.Helpers
@model FiscalDocument
@{
    Layout = null;
    ViewBag.WindowTitle = string.Format (Resources.FiscalDocumentFilenameFormatString,
                                         Model.Issuer.Id, Model.Batch, Model.Serial);
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@ViewBag.WindowTitle</title>
    @Styles.Render("~/Content/print")
	<style type="text/css">
	@@font-face {
	  font-family: 'Oswald';
	  font-style: normal;
	  font-weight: 200;
	  src: url(https://fonts.gstatic.com/s/oswald/v13/gov12z69psR1Uu7UJEfiUrO3LdcAZYWl9Si6vvxL-qU.woff) format('woff');
	  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215;
	}
	@@font-face {
	  font-family: 'Oswald';
	  font-style: normal;
	  font-weight: 300;
	  src: url(https://fonts.gstatic.com/s/oswald/v13/HqHm7BVC_nzzTui2lzQTDbO3LdcAZYWl9Si6vvxL-qU.woff) format('woff');
	  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215;
	}
	@@font-face {
	  font-family: 'Oswald';
	  font-style: normal;
	  font-weight: 400;
	  src: url(https://fonts.gstatic.com/s/oswald/v13/qpy-UiLNKP-VfOdbcs6r6-vvDin1pK8aKteLpeZ5c0A.woff) format('woff');
	  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215;
	}
	@@font-face {
	  font-family: 'Oswald';
	  font-style: normal;
	  font-weight: 700;
	  src: url(https://fonts.gstatic.com/s/oswald/v13/bH7276GfdCjMjApa_dkG6bO3LdcAZYWl9Si6vvxL-qU.woff) format('woff');
	  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215;
	}
	@@page {
	    size: US-Letter;
	}
	html, body {
		width: 100%;
		height: 100%;
		margin: 0;
		padding: 0;
	}

	body {
	    font:normal 10px 'Oswald';
		color:#00001c !important;
		line-height: 1.2;
	}
	p {
	    margin: 0 0 1px;
	}
	dl {
		margin-bottom: 5px;
	}
	h2 {
	    margin: 0 0 1px 0;
	    font-size: 10px;
	}
	table > thead > tr > th,
	table > tbody > tr > th {
		padding: 4px;
	    font:normal 11.2px 'Oswald';
		text-align: center;
		text-transform: uppercase;
		background-color: white !important;
		border-bottom:3px solid white;
		color:#4c9fdc !important;
		vertical-align: middle;
	}
	table > tbody > tr > td {
		height: 7mm;
	    font:300 11.2px 'Oswald';
		text-align: center;
		background-color: #f7f7f8 !important;
		border-bottom:3px solid white;
		color:#1C1C1B !important;
		vertical-align: middle;
	}
	table > tfoot > tr > th,
	table > tfoot > tr > td {
		padding: 1px;
	    font:300 11.2px 'Oswald';
		text-align: right;
		background-color: #edeef0 !important;
		border-bottom:none;
		color:#1C1C1B !important;
		vertical-align: middle;
	}
	table > tfoot > tr > th {
		font-weight: 400;
	}
	table > tbody > tr:nth-child(odd) > th {
		background: none !important;
	}
	table > tbody > tr:nth-child(odd) > td {
		background: #edeef0 !important;
	}
	table > tbody > tr > td.no-bg,
    table > tfoot > tr > td.no-bg {
		background: none !important;
	}
	table > tfoot > tr > th.tax,
	table > tfoot > tr > td.tax {
		color:#757575 !important;
	}
	table > tfoot > tr.total > th,
	table > tfoot > tr.total > td {
		padding: 0 0 0 1mm;
		font-size: 15px;
		text-transform:uppercase;
		color:#e6595a !important;
	}
	table > tbody > tr > td > small {
	    font-size:9px;
		color:#757575 !important;
	}
	.logo {
	    max-height: 14mm;
	}
	.dl-horizontal dt {
		float: left;
		overflow: hidden;
		clear: left;
		text-align: right;
		text-overflow: ellipsis;
		white-space: nowrap;
		font-weight: 400;
	}
	.dl-horizontal dd {
		text-align: left;
		vertical-align: middle;
		font-weight: 200;
		color: #757575 !important;
	}
	header .dl-horizontal dt {
		margin-left: -25px;
		width: 110px;
	    font-size: 11px;
		font-weight: 400;
	}
	header .dl-horizontal dd {
		margin-left: 90px;
	    font-size: 11px;
		font-weight: 200;
	}
	header dd.issuance,
	header dd.issuance span {
	    font-size: 10.2px;
		color: #757575 !important;
	}
	table > tfoot > tr > td > .dl-horizontal dt {
		width: 70px;
		font-size: 10px;
		font-weight: 300;
	}
	table > tfoot > tr > td > .dl-horizontal dd {
		margin-left: 75px;
		font-size: 10px;
	}
	.payment-info {
		font-size: 10px;
		font-weight: 200;
		line-height: 1.2;
		text-align: center;
		color: #1C1C1B !important;
	}
	.payment-info strong {
		margin-top:4px;
		font-weight: 400;
		color: #1C1C1B !important;
	}
	.text-s12 {
	    font-size: 12px;
		font-weight: 300;
		color:#1C1C1B !important;
	}
	.text-s08 {
	    font-size: 8px;
		font-weight: 300;
		color:#757575 !important;
	}
	p.amount-words {
		margin: 2mm 0;
		border: none;
		font-size: 11.2px;
	}
	.monospaced {
		color: #757575 !important;
	}
	.monospaced strong {
		text-transform: uppercase;
		color: #1C1C1B !important;
	}
	.small {
		font-size: 75%
	}

					.float-container {
									width: 100%;
									height: 2em;
									position: absolute;
									left: 0px;
									top: 300px;
									/*	z-index: -1;*/
									/*border: 3px solid blue;*/
									display: block;
									color: gray;
									font-size: 15em;
									opacity: 0.2;
									/*margin: 0 auto;*/
									text-align: center;
									-webkit-transform: rotate(-40deg);
									/* Firefox */
									-moz-transform: rotate(-40deg);
									/* IE */
									-ms-transform: rotate(-40deg);
									/* Opera */
									-o-transform: rotate(-40deg);
									/* Internet Explorer */
									filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);
					}
	</style>
</head>
<body>
    <header>
    	<div class="row">
			<div class="col-xs-5">
	        	@if(!string.IsNullOrEmpty(ViewBag.Logo)) {
	            <img class="logo" src='@Url.Content(ViewBag.Logo)' alt="Logo" />
	            }
	 		</div>
			<div class="col-xs-6 col-xs-offset-1">
		  		<dl class='dl-horizontal'>
					<dt>@Model.Type.GetDisplayName()</dt>
					<dd>@Html.DisplayFor(x => x.Batch) @Html.DisplayFor(x => x.Serial)</dd>
					<dt>@Resources.Certificate</dt>
					<dd>@Html.DisplayFor(x => x.IssuerCertificateNumber)</dd>
					<dt>@Resources.StampId</dt>
					<dd>@Html.DisplayFor(x => x.StampId)</dd>
					<dt>@Resources.Issuance</dt>
					<dd class="issuance">@Resources.PostalCode @Html.DisplayFor(x => x.IssuedLocation) / <span class="nowrap">@Html.DisplayFor(x => x.Issued)</span></dd>
				</dl>
	 		</div>
		</div>
    	<div class="row">
			<div class="col-xs-3" style="height:2mm;background:#add9e8 !important;"></div>
			<div class="col-xs-9" style="height:2mm;background:#4c9fdc !important;"></div>
		</div>
    </header>

	<div class="row" style="margin-bottom:5mm">
		<div class="col-xs-5">
			<div class="row">
				<div class="col-xs-12">
					<h2 class="text-uppercase">@Resources.Recipient</h2>
		 			<p style="font-size:13px">@Html.DisplayFor(x => x.Recipient)</p>
		 			<p class="text-s12 text-uppercase">@Html.DisplayFor(x => x.RecipientName)</p>
                    <p class="text-s08" style="margin-bottom:4px">
                        @Resources.CfdiUsage: @Html.DisplayFor(x => x.Usage.Id) @Html.DisplayFor(x => x.Usage.Description)
                    </p>
				</div>
			</div>
 		</div>
		<div class="col-xs-7">
			<div class="col-xs-8" style="padding-right:1mm;">
				<div class="row">
					<div class="col-xs-12 text-right">
						<h2 class="text-right text-uppercase">@Resources.Issuer</h2>
			 			<p style="font-size:13px">@Html.DisplayFor(x => x.Issuer.Id)</p>
			 			<p class="text-s12 text-uppercase">@Html.DisplayFor(x => x.IssuerName)</p>
			 			<p class="text-s08" style="margin-bottom:4px">
                            @Resources.TaxRegime: @Html.DisplayFor(x => x.IssuerRegime.Id) @Html.DisplayFor(x => x.IssuerRegimeName)
                        </p>
					</div>
				</div>
 			</div>
            <div class="col-xs-4" style="padding:0;">
                <a href="@Model.ValidataionUrl()" target="_blank">
                    <img class="" style="width: 29mm" src='@Url.Action("QRCode33", new { id = Model.Id })' />
                </a>
            </div>
 		</div>
	</div>

@if (!string.IsNullOrEmpty (Model.Reference)) {
	<div class="row">
		<div class="col-xs-12 text-right">
			<p class="text-s12">@Html.DisplayFor(x => x.Reference)</p>
		</div>
	</div>
}


@if (Model.Type == FiscalDocumentType.PaymentReceipt) {
    <table>
        <thead>
            <tr>
                <th class="text-capitalize" style="padding: 4px 10px;">@Resources.RowNumber</th>
                <th class="col-xs-1">@Resources.StampId</th>
                <th class="col-xs-1">@Resources.Batch @Resources.Serial</th>
                <th class="">@Resources.InstallmentPaymentShort</th>
                <th class="">@Resources.Currency / @Resources.ExchangeRate</th>
                <th class="">@Resources.PreviousBalance</th>
                <th class="">@Resources.PaymentAmount</th>
                <th class="">@Resources.OutstandingBalance</th>
            </tr>
        </thead>
        <tbody>
        @for (int i = 0; i < Model.Relations.Count; i++) {
            var item = Model.Relations [i];
            <tr>
                <th class="nowrap">@(i + 1)</th>
                <td class="nowrap text-center">@Html.DisplayFor(x => item.Relation.StampId)</td>
                <td class="nowrap text-center">@Html.DisplayFor(x => item.Relation.Batch) @Html.DisplayFor(x => item.Relation.Serial)</td>
                <td class="nowrap text-center">@Html.DisplayFor(x => item.Installment)</td>
                <td class="nowrap text-center">
                @Html.DisplayFor(x => item.Relation.Currency)
                @if (item.Relation.Currency != Model.Currency) {
                    <text>/ @Html.DisplayFor(x => item.ExchangeRate)</text>
                }
                </td>
                <td class="nowrap text-right">@Html.DisplayFor(x => item.PreviousBalance)</td>
                <td class="nowrap text-right">@Html.DisplayFor(x => item.Amount)</td>
                <td class="nowrap text-right">@Html.DisplayFor(x => item.OutstandingBalance)</td>
            </tr>
        }
        </tbody>
        <tfoot>
            <tr>
                <td rowspan="2" class="no-bg"></td>
                <td rowspan="2" colspan="4" class="no-bg">
                    <div class="row">
                        <div class="col-xs-5">
                            <p class="payment-info">
                                <strong>@Resources.PaymentDate</strong><br>
                                @Html.DisplayFor(x => x.PaymentDate)<br>
                            @if (!string.IsNullOrWhiteSpace(Model.Reference)) {
                                <strong>@Resources.ForeignBankName</strong><br>
                                @Html.DisplayFor(x => x.Reference)
                            }
                            </p>
                        </div>
                        <div class="col-xs-5">
                            <p class="payment-info">
                                <strong>@Resources.PaymentTerms</strong><br>
                                @string.Format("{0:D2}", (int) Model.PaymentMethod) :
                                @Model.PaymentMethod.GetDisplayName()<br>
                            @if (!string.IsNullOrWhiteSpace(Model.PaymentReference)) {
                                <strong>@Resources.PaymentReference</strong><br>
                                @Html.DisplayFor(x => x.PaymentReference)
                            }
                            </p>
                        </div>
                        <div class="col-xs-2">
                            <p class="payment-info">
                                <strong>@Resources.Currency</strong><br>
                                @Model.Currency.GetDisplayName()<br>
                            @if (Model.Currency != CurrencyCode.MXN) {
                                <strong>@Resources.ExchangeRate</strong><br>
                                @Html.DisplayFor(x => x.ExchangeRate)
                            }
                            </p>
                        </div>
                    </div>
                </td>
            </tr>
            <tr class="total">
                <th colspan="2">@Resources.TotalAmount</th>
                <td colspan="1">@Html.DisplayFor(x => x.PaymentAmount)</td>
            </tr>
        </tfoot>
    </table>
} else {
    <table>
        <thead>
            <tr>
                <th class="text-capitalize" style="padding: 4px 10px;">@Resources.RowNumber</th>
                <th class="">@Resources.Quantity</th>
                <th class="col-xs-1">@Resources.UnitOfMeasurementShort</th>
                <th class="col-xs-1">@Resources.Code</th>
                <th class="col-xs-7">@Resources.ProductName</th>
                <th class="col-xs-1">@Resources.Price</th>
                <th class="col-xs-1">@Resources.Amount</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.Details.Count; i++) {
				var item = Model.Details [i];
                <tr>
					<th class="nowrap">@(i + 1)</th>
                    <td class="nowrap text-right">@Html.DisplayFor(x => item.Quantity)</td>
                    <td class="nowrap text-center">@Html.DisplayFor(x => item.UnitOfMeasurement.Id) / @Html.DisplayFor(x => item.UnitOfMeasurementName)</td>
                    <td class="nowrap text-center">@Html.DisplayFor(x => item.ProductService.Id)</td>
                    <td class="text-center">
						@Html.DisplayFor(x => item.ProductName)
					@if (!string.IsNullOrEmpty (item.Comment)) {
						<p class="pre-wrapped small text-center">@item.Comment</p>
					}
					</td>
                    <td class="nowrap text-right">@item.NetPrice.ToString("#,###.00##")</td>
                    <td class="nowrap text-right">@item.Subtotal.ToString("#,###.00##")</td>
                </tr>
            }
        </tbody>
    	<tfoot>
	        <tr>
				<td rowspan="5" class="no-bg"></td>
	            <td rowspan="5" colspan="4" class="no-bg">
					<div class="row">
						<div class="col-xs-4">
							<p class="payment-info">
								<strong>@Resources.PaymentMethod</strong><br>
                            @if(Model.Terms == PaymentTerms.Immediate){
                                <text>@Resources.CFDI_SinglePayment</text>
                            } else if(Model.Terms == PaymentTerms.NetD){
                                <text>@Resources.CFDI_InstallmentPayments</text>
                            }
							</p>
						</div>
						<div class="col-xs-5">
							<p class="payment-info">
								<strong>@Resources.PaymentTerms</strong><br>
								<text>@string.Format("{0:D2}", (int) Model.PaymentMethod) :</text>
								@Model.PaymentMethod.GetDisplayName()<br>
							</p>
						</div>
						<div class="col-xs-3">
							<p class="payment-info">
								<strong>@Resources.Currency</strong><br>
								@Model.Currency.GetDisplayName()<br>
							@if (Model.Currency != CurrencyCode.MXN) {
								<strong>@Resources.ExchangeRate</strong><br>
								@Html.DisplayFor(x => x.ExchangeRate)
							}
							</p>
						</div>
					</div>
	            </td>
	            <th class="nowrap">@Resources.Subtotal</th>
	            <td class="nowrap">@Html.DisplayFor(x => x.Subtotal)</td>
	        </tr>
		@if (Model.Discount > 0m) {
	        <tr>
	            <th class="tax">@Resources.Discount</th>
	            <td class="tax">@Html.DisplayFor(x => x.Discount)</td>
	        </tr>
		}
	        <tr>
	            <th class="tax">@Resources.Taxes</th>
	            <td class="tax">@Html.DisplayFor(x => x.Taxes)</td>
	        </tr>
		@if (Model.RetentionRate > 0m) {
	        <tr>
	            <th class="tax">@Resources.RetentionTaxes</th>
	            <td class="tax">@Html.DisplayFor(x => x.RetentionTaxes)</td>
	        </tr>
		}
	        <tr class="total">
	            <th colspan="1">@Resources.Total</th>
	            <td>@Html.DisplayFor(x => x.Total)</td>
	        </tr>
		</tfoot>
    </table>
}

    <div class="row">
        <div class="col-xs-12 text-right">
        @if (Model.Type == FiscalDocumentType.PaymentReceipt) {
            <p class="amount-words">@Html.CurrencyToString(Model.PaymentAmount, Model.Currency)</p>
        } else {
            <p class="amount-words">@Html.CurrencyToString(Model.Total, Model.Currency)</p>
        }
        </div>
    </div>
    
    
@if (Model.Type != FiscalDocumentType.PaymentReceipt && Model.Relations.Any ()) {
    <table>
        <thead>
            <tr>
                <th class="text-capitalize" style="padding: 4px 10px"></th>
                <th>@Resources.RelatedCdfi</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                @if (Model.Type == FiscalDocumentType.AdvancePaymentsApplied) {
                    <td colspan="2" class="no-bg"><strong>@Resources.RelationType</strong> @Resources.CFDI_RelationType_AdvancePayment</td>
                } else if (Model.Type == FiscalDocumentType.CreditNote) {
                    <td colspan="2" class="no-bg"><strong>@Resources.RelationType</strong> @Resources.CFDI_RelationType_CreditNote</td>
                } else {
                    <td colspan="2" class="no-bg"><strong>@Resources.RelationType</strong> @Resources.CFDI_RelationType_Replacement</td>
                }
            </tr>
        @for (int i = 0; i < Model.Relations.Count; i++) {
            var item = Model.Relations [i];
            <tr>
                <th class="nowrap">@(i + 1)</th>
                <td>@item.Relation.StampId</td>
            </tr>
        }
        </tbody>
    </table>
}

	<div class="row" style="margin-top:3mm">
		<div class="col-xs-6">
			<div class="row">
				<div class="col-xs-6">
					<p class="monospaced">
						<strong>@Resources.AuthorityCertificateNumber</strong><br>
						@Html.DisplayFor(x => x.AuthorityCertificateNumber)
					</p>
				</div>
				<div class="col-xs-6">
					<p class="monospaced">
						<strong>@Resources.StampDate</strong><br>
						@Html.DisplayFor(x => x.Stamped)
					</p>
				</div>
				<div class="col-xs-12">
					<p class="monospaced">
						<strong>@Resources.OriginalString</strong><br>
						@Html.DisplayFor(x => x.OriginalString)
					</p>
				</div>
			</div>
		</div>
		<div class="col-xs-6">
			<div class="row">
				<div class="col-xs-12" style="padding-left: 0;">
					<p class="monospaced">
						<strong>@Resources.IssuerDigitalSeal</strong><br>
						@Html.DisplayFor(x => x.IssuerDigitalSeal)
					</p>
				</div>
				<div class="col-xs-12" style="padding-left: 0;">
					<p class="monospaced">
						<strong>@Resources.AuthorityDigitalSeal</strong><br>
						@Html.DisplayFor(x => x.AuthorityDigitalSeal)
					</p>
				</div>
			</div>
		</div>
	</div>
																
@if (Model.IsCancelled) {
<div class="float-container">
																@Resources.Cancelled
</div>
}
</body>
</html>
