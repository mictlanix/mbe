@using Mictlanix.BE
@using Mictlanix.BE.Model
@using Mictlanix.BE.Web.Helpers
@model FiscalDocument

@{
    ViewBag.Title = Resources.Edit;
    var CurrentUser = Html.CurrentUser () ?? new User ();
    var Privilege = CurrentUser.GetPrivilege (SystemObjects.StandaloneFiscalDocuments);
}

<h2>@Resources.FiscalDocument</h2> 

<div id='master-section'>
	@Html.Partial("_EditorView")
</div>

<div class='tabbable'>
    <ul class='nav nav-tabs'>
        <li class='active'><a href='#tab-1' data-toggle='tab'>@Resources.Concepts</a></li>
        <li><a href='#tab-2' data-toggle='tab'>@Resources.ReplacementCdfi</a></li>
    </ul>
    <div class='tab-content'>
        <div id='tab-1' class='tab-pane active'>
            <div class='control-group text-right'>
                <a id='add-items' class='btn btn-default' data-url='@Url.Action("AddItems", new { id = Model.Id })'
                   data-type='text' data-placement='left' data-pk='@Model.Id' data-value=''
                   data-display='false' data-emptytext='' data-emptyclass='' data-highlight='false'>
                    <i class='icon-plus'></i> @Resources.SalesOrder
                </a>
            </div>
            <div id='details-section'>
                <div id='items-container' data-url='@Url.Action("Items", new { id = Model.Id })'>
                    @Html.Partial("_Items", Model.Details)
                </div>
                @if (Privilege.AllowCreate)
                {
                    <div class='search-box'>
                        <input type='text' id='product-search' name='product-search' />
                    </div>
                }
            </div>
        </div>
        <div id='tab-2' class='tab-pane'>
            <div id='relations-container'>
                @Html.Partial("_SimpleRelations", Model.Relations)
            </div>
            <div class='search-box'>
                <input type='text' id='relation-search' name='relation-search' />
            </div>
        </div>
    </div>
</div>

<div id='totals-section' class='pull-right' data-url='@Url.Action("Totals", new { id = Model.Id })'>
    @Html.Partial("_Totals")
</div>
<div class='clearfix'></div>
<div id='back-to-list' class='pull-left'>
    @Html.ActionLink(Resources.BackToList, "Index", new { }, new { @class = "button icon back" })
</div>
<div id='confirm-button' class='pull-right @(Model.Details.Count == 0 ? "hide" : "")'>
@using (Html.BeginForm("Confirm", "FiscalDocuments", new { id = Model.Id })) {
    <button id='complete' type='submit'>@Resources.Complete</button>
}
</div>
<div class='clearfix'></div>
<script type='text/javascript'>
$(function () {
@if (Privilege.AllowCreate) {
<text>
    $('#product-search').tokenInput('@Url.Action("GetSuggestions", "FiscalDocuments", new { id = Model.Id })', {
        hintText:'@Resources.HIntText',
        noResultsText:'@Resources.NoResultsText',
        searchingText:'@Resources.SearchingText',          
        resultsFormatter:function(item){return ProductFormatter(item);},
        queryParam:'pattern',minChars:3,tokenLimit:1,
        onAdd:function(item) {
            $.post('@Url.Action("AddItem", new { id = Model.Id })', { 'product': item.id }, function (detail) {
                $.get('@Url.Action("Item", new { id = 0 })' + detail.id, function (data) {
                    $('#items').append(data);
                    $('#totals-section').loadUrl();
                    $('#product-search').tokenInput('clear');
                    $('#confirm-button').removeClass('hide');
                });
            }, 'json');
        }
    });
</text>
}
    $('#add-items').editable({
		success: function(response, newValue) {
        	$('#items-container').loadUrl();
        	$('#totals-section').loadUrl();
            $('#confirm-button').removeClass('hide');
            setTimeout(function(){$('#add-items').editable('setValue', '');},500);
	    }
    }).removeClass('editable-click');

    $('#relation-search').tokenInput('@Url.Action("GetReplacementRelations", "FiscalDocuments", new { id = Model.Id })', {
        hintText:'@Resources.HIntText',
        noResultsText:'@Resources.NoResultsText',
        searchingText:'@Resources.SearchingText',
        propertyToSearch: 'stamp',
        resultsFormatter:function(item){return DocumentFormatter(item);},
        queryParam:'pattern',minChars:3,tokenLimit:1,
        onAdd:function(item) {
            $.post('@Url.Action("AddRelation", new { id = Model.Id })', { 'relation': item.id }, function (relation) {
                $.get('@Url.Action("Relation", new { id = 0 })' + relation.id, function (data) {
                    $('#relations').append(data);
                    $('#relation-search').tokenInput('clear');
                });
            }, 'json');
        }
    });
});
</script>
<style type='text/css'>
ul.token-input-list { width: 100%; }
</style>