@using Business.Essentials
@using Business.Essentials.Model
@using Business.Essentials.WebApp.Helpers
@using Business.Essentials.WebApp.Models
@model IEnumerable<ReturnCustomer>


@{
    ViewBag.Title = Resources.Title_ReturnCustomer;
    var CurrentUser = Html.CurrentUser() ?? new User();
    var Privilege = Html.GetPrivilege(CurrentUser, SystemObjects.ReturnCustomer);
}

<h2>@Resources.DisplayName_ReturnCustomer</h2>
<div id="tabs">
    <ul>
        <li><a href="#search-container">@Resources.DisplayName_SalesSearch</a></li>
        <li><a href="#returns-container">@Resources.DisplayName_ReturnIncomplete</a></li>
    </ul>
    <div id="search-container">
        @using (Ajax.BeginForm(new AjaxOptions { UpdateTargetId = "search-results", LoadingElementId = "activity-indicator", OnBegin = "onSearchBegin" }))
        {
            <label>@Resources.FolioSalesOrder</label>    
            <div class="search-box">
                <button type="submit" class="icon search">@Resources.Search</button>
                <div class="search-field">
                    <input type="text" id="id" name="id" />
                </div>
            </div>
        }
        <div id="details-container">
            <div id="activity-indicator">
                <img alt="@Resources.Loading" src="@Url.Content("~/Content/images/loading-bar.gif")" />
            </div>
            <div id="search-results">
            </div>
        </div>
    </div>
    <div id="returns-container">
        <table>
            <tr>
                <th>@Html.LabelFor(x => new ReturnCustomer().Id)</th>
                <th>@Html.LabelFor(x => new ReturnCustomer().CreationTime)</th>
                <th>@Html.LabelFor(x => new ReturnCustomer().SalesOrder.Customer)</th>
                <th>@Html.LabelFor(x => new ReturnCustomer().SalesPerson)</th>
                <th>@Html.LabelFor(x => new ReturnCustomer().Creator)</th>
                <th>@Html.LabelFor(x => new ReturnCustomer().SalesOrder)</th>
                <th>@Html.LabelFor(x => new ReturnCustomer().IsCompleted)</th>
                <th>@Html.LabelFor(x => new ReturnCustomer().IsCancelled)</th>
                <th></th>
            </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td class="number">@Html.DisplayFor(x => item.Id)</td>
                <td class="date">@Html.DisplayFor(x => item.CreationTime)</td>
                <td>@Html.DisplayFor(x => item.SalesOrder.Customer.Name)</td>
                <td>@Html.DisplayFor(x => item.SalesPerson.Name)</td>
                <td>@Html.DisplayFor(x => item.Creator.Name)</td>
                <td class="number">@Html.DisplayFor(x => item.SalesOrder.Id)</td>
                <td class="bool">@Html.DisplayFor(x => item.IsCompleted)</td>
                <td class="bool">@Html.DisplayFor(x => item.IsCancelled)</td>
                <td class="actions">
        	        @if (Privilege.AllowUpdate && !item.IsCompleted && !item.IsCancelled)
                 {
            	        @Html.ActionLink(" ", "Details", new { id = item.Id }, new { @class = "button icon edit icon-only", @title = Resources.Edit })
                 }
                </td>
            </tr>
        }
        </table>
    </div>
</div>
<script type="text/javascript">
    $(function () {
        $("#tabs").tabs();
    });
    function onSearchBegin() {
        $("#search-results").html(null);
    }
</script>
