@using Mictlanix.BE
@using Mictlanix.BE.Model
@using Mictlanix.BE.Web.Helpers
@using Mictlanix.BE.Web.Models
@model Search<Supplier>

@{
    ViewBag.Title = Resources.Title_Supplier;
    var CurrentUser = Html.CurrentUser() ?? new User();
    var Privilege = Html.GetPrivilege(CurrentUser, SystemObjects.Suppliers);
}

<p>@Html.ValidationMessageFor(x => x.Pattern)</p>

<table>
    <tr>
        <th>@Html.LabelFor(x => new Supplier().Code)</th>
        <th>@Html.LabelFor(x => new Supplier().Name)</th>
        <th>@Html.LabelFor(x => new Supplier().CreditLimit)</th>
        <th>@Html.LabelFor(x => new Supplier().CreditDays)</th>
        <th></th>
    </tr>

@foreach (var item in Model.Results) {
    <tr>
        <td>@Html.DisplayFor(x => item.Code)</td>
        <td>@Html.DisplayFor(x => item.Name)</td>
        <td>@Html.DisplayFor(x => item.Zone)</td>
        <td>@Html.DisplayFor(x => item.CreditLimit)</td>
        <td>@Html.DisplayFor(x => item.CreditDays)</td>
        <td class="actions">
        	@if(Privilege.AllowUpdate) {
            	@Html.ActionLink(" ", "Edit", new { id = item.Id }, new { @class = "button icon edit icon-only", @title = Resources.Edit })
            }
        	@if(Privilege.AllowRead) {
            	@Html.ActionLink(" ", "Details", new { id = item.Id }, new { @class = "button icon view icon-only", @title = Resources.Details })
            }
        	@if(Privilege.AllowDelete) {
            	@Html.ActionLink(" ", "Delete", new { id = item.Id }, new { @class = "button icon delete icon-only", @title = Resources.Delete })
            }
        </td>
    </tr>
}
</table>


<div class="buttons right">
	<label class="button left">@Model.ToString()</label>@if (Model.HasPrev) {<a class="button middle icon prev icon-only" title="@Resources.PrevPage" href="javascript:void(0)"></a>}@if (Model.HasNext) {<a class="button right icon next icon-only" title="@Resources.NextPage" href="javascript:void(0)"></a>}
</div>
@if (Model.HasPrev)
{
<script type="text/javascript">
    $(function () {
        $('a.prev').click(function (e) {
            e.preventDefault();
            $("#activity-indicator").show();
            $("#search-results").hide();
            $.post('@Url.Action("Index")', { Pattern: "@Model.Pattern", Offset: "@(Model.Offset-Model.Limit)", Limit: "@Model.Limit" }, function (data) {
                $("#search-results").html(data);
                $("#search-results").show();
                $("#activity-indicator").hide();
            });
        });
    });
</script>
}
@if (Model.HasNext)
{
<script type="text/javascript">
    $(function () {
        $('a.next').click(function (e) {
            e.preventDefault();
            $("#activity-indicator").show();
            $("#search-results").hide();
            $.post('@Url.Action("Index")', { Pattern: "@Model.Pattern", Offset: "@(Model.Offset+Model.Limit)", Limit: "@Model.Limit" }, function (data) {
                $("#search-results").html(data);
                $("#search-results").show();
                $("#activity-indicator").hide();
            });
        });
    });
</script>
}

