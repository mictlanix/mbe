@using Mictlanix.BE
@using Mictlanix.BE.Model
@using Mictlanix.BE.Web.Helpers
@using Mictlanix.BE.Web.Models
@model Search<SupplierPayment>

@{
    ViewBag.Title = Resources.Title_SuppliersPayments;
    var CurrentUser = Html.CurrentUser() ?? new User();
    var Privilege = Html.GetPrivilege(CurrentUser, SystemObjects.SupplierPayment);
}

<table>
    <tr>
        <th>@Html.LabelFor(x => new SupplierPayment().Id)</th>
        <th>@Html.LabelFor(x => new SupplierPayment().Date)</th>
        <th>@Html.LabelFor(x => new SupplierPayment().Supplier)</th>
        <th>@Html.LabelFor(x => new SupplierPayment().Amount)</th>
        <th>@Html.LabelFor(x => new SupplierPayment().Method)</th>
        <th></th>
    </tr>
@foreach (var item in Model.Results) {
    <tr>
        <td class="number">@Html.DisplayFor(x => item.Id)</td>
        <td class="date">@Html.DisplayFor(x => item.Date)</td>
        <td>@Html.DisplayFor(x => item.Supplier.Name)</td>
        <td class="number">@Html.DisplayFor(x => item.Amount)</td>
        <td class="date">@item.Method.GetDisplayName()</td>
        <td class="actions">
            @Html.ActionLink(" ", "Details", new { id = item.Id }, new { @class = "button icon view icon-only", @title = Resources.Details })
        </td>
    </tr>
}
</table>

<div class="buttons right">
	<label class="button left">@Model.ToString()</label>@if (Model.HasPrev) {<a class="button middle icon prev icon-only" title="@Resources.PrevPage" href="javascript:void(0)"></a>}@if (Model.HasNext) {<a class="button right icon next icon-only" title="@Resources.NextPage" href="javascript:void(0)"></a>}
</div>
@if (Model.HasPrev)
{
<script type="text/javascript">
    $(function () {
        $('a.prev').click(function (e) {
            e.preventDefault();
            $("#activity-indicator").show();
            $("#search-results").hide();
            $.post("/SupplierPayments/Index", { Pattern: "@Model.Pattern", Offset: "@(Model.Offset-Model.Limit)", Limit: "@Model.Limit" }, function (data) {
                $("#search-results").html(data);
                $("#search-results").show();
                $("#activity-indicator").hide();
            });
        });
    });
</script>
}
@if (Model.HasNext)
{
<script type="text/javascript">
    $(function () {
        $('a.next').click(function (e) {
            e.preventDefault();
            $("#activity-indicator").show();
            $("#search-results").hide();
            $.post("/SupplierPayments/Index", { Pattern: "@Model.Pattern", Offset: "@(Model.Offset+Model.Limit)", Limit: "@Model.Limit" }, function (data) {
                $("#search-results").html(data);
                $("#search-results").show();
                $("#activity-indicator").hide();
            });
        });
    });
</script>
}

@*@Model.Sum(x => x.Amount).ToString("c")*@