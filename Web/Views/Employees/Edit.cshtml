@using Business.Essentials
@using Business.Essentials.Model
@using Business.Essentials.WebApp.Helpers
@model Business.Essentials.Model.Employee

@{
    ViewBag.Title = Resources.Edit;
}

<h2>@Resources.Edit</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>@Resources.Title_Employee</legend>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.FirstName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FirstName)
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.LastName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastName)
            @Html.ValidationMessageFor(model => model.LastName)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Birthday)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Birthday)
            @Html.ValidationMessageFor(model => model.Birthday)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.TaxpayerId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TaxpayerId)
            @Html.ValidationMessageFor(model => model.TaxpayerId)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Gender)
        </div>
        <div class="editor-field">
            <select id="status-list" name="Gender">
                @foreach (var item in Enum.GetValues(typeof(GenderEnum)))
                {
                    if ((GenderEnum)item == Model.Gender)
                    {
                        <option value="@((int)item)" selected="selected">@(((GenderEnum)item).GetDisplayName())</option>
                    }
                    else
                    {
                        <option value="@((int)item)">@(((GenderEnum)item).GetDisplayName())</option>
                    }
                }
            </select>
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.PersonalId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PersonalId)
            @Html.ValidationMessageFor(model => model.PersonalId)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.StartJobDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StartJobDate)
            @Html.ValidationMessageFor(model => model.StartJobDate)
        </div>

        <p><button type="submit" class="icon save">@Resources.Save</button></p>
    </fieldset>
}

<div>
    @Html.ActionLink(Resources.BackToList, "Index", new { }, new { @class = "button icon back" })
</div>
