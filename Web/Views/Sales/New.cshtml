@using Mictlanix.BE
@using Mictlanix.BE.Model
@using Mictlanix.BE.Web.Models
@model SalesOrder

@{
    ViewBag.Title = Resources.Title_NewSale;
}

<h2>@Resources.DisplayName_NewSale</h2> 

<div id="master-section">
    <fieldset>
        <legend>@Resources.DisplayName_SalesInformation</legend>
        @using (Html.BeginForm())
        {
            @Html.ValidationSummary(true)
            
            <div class="editor-label">
                @Html.LabelFor(model => model.Customer)
                @Html.TextBoxFor(model => model.CustomerId)
                @Html.ValidationMessageFor(model => model.CustomerId)
            </div>
            <div id="delivery-box" class="editor-label" style="display:inline-block">
                <input id="delivery" name="delivery" type="checkbox" value="false">
                <label for="delivery">@Resources.Delivery</label>
            </div>
            <div id="hasCredit" class="editor-label" style="display:inline-block">
                @Html.EditorFor(model => model.IsCredit)
                @Html.LabelFor(model => model.IsCredit)
            </div>
            <div id="shipTo" class="editor-label" style="display:none">
                @Html.LabelFor(x => x.ShipTo)
                @Html.EditorFor(x => x.ShipToId)
            </div>
            <div class="action-buttons">
                <button type="submit" class="icon save">@Resources.Save</button>
            </div>
        }
    </fieldset>
</div>
<div id="back-to-list">
    @Html.ActionLink(Resources.BackToList, "Index", new { }, new { @class = "button icon back" })
</div>
<style type="text/css">
ul.token-input-list {
  width:100%;
}
</style>
<script type="text/javascript">
    $(function () {
        $("#CustomerId").tokenInput("@Url.Action("GetSuggestions", "Customers")", {
            hintText: "@Resources.HIntText",
            noResultsText: "@Resources.NoResultsText",
            searchingText: "@Resources.SearchingText",
            queryParam: "pattern",
            minChars: 1,
            tokenLimit: 1,
            prePopulate: [{ id: "@Model.Customer.Id", name: "@Model.Customer.Name"}],
            onAdd: function (item) {
            	if (item.id > 1) {
                    $("#delivery-box").show("slow");
                }
                if (item.hasCredit) {
                    $("#hasCredit").show("slow");
                }
            },
            onDelete: function (item) {
                $("#IsCredit,#delivery").attr("checked", false);
                $("#hasCredit,#delivery-box").hide("slow");
            }
        });
        
    	$("#hasCredit,#delivery-box").hide("slow");
    	
        $("#ShipToId").tokenInput(function() {
			var customer = $("#CustomerId").tokenInput("get")[0];
			
			if(typeof(customer) === "undefined") {
				customer = {id : 0};
			}
			
			return "@Url.Action("GetSuggestions2", "Addresses", new { customer = 0 })" + customer.id; }, {
            hintText: "@Resources.HIntText",
            noResultsText: "@Resources.NoResultsText",
            searchingText: "@Resources.SearchingText",          
            queryParam: "pattern",tokenLimit: 1
        });
        
        $("#delivery").change(function() {
            var show = $(this).is(':checked');
            
            if (show) {
                $("#shipTo").show("slow");
            } else {
                $("#shipTo").hide("slow");
                $("#ShipToId").tokenInput("clear");
            }
        });
    });
</script>